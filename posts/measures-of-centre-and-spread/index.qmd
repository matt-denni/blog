---
title: "Measures of centre and spread"
author: "Matt Dennis"
date: "2022-05-09"
categories: [statistics]
image: "image.jpg"
---

Once upon a time, I composed and taught music for a living.  Now, I'm a data scientist.  It's been a wild ride and loads of fun.  But more about that in another post.

As a musician, I was good at music analysis.  I learned many techniques that could help me understand how a piece of music was put together.  While this helped me to develop an analytical way of thinking, none of the analytical *techniques* I learned in music analysis have been directly applicable to the problems I've faced as a data scientist (thus far).

So, I needed to go back to the field of Mathematics and Statistics and acquire/dust off the tools needed in the data science world.  If you're on a similar journey to the one I took, then you might find the next series of posts that I'm going to be putting together useful.

I'm starting off with this post, on statistical measures of center and spread.  I'll be using `R` and the built in `mtcars` data set in the code examples.

Here's what the first few rows of this data set look like:

```{r}
head(mtcars)
```

As you can see, there are a number of variables.  We'll be focusing on the first one, `mpg` in the examples below.

## Measures of centre

In statistics, three common examples of measures of centre are *mean*, *median* and *mode*.

### Mean

The mean value of a series of numbers is also often called the *average*.  In mathematical notation, the mean is often denoted as $\overline{x}$.  It is calculated by adding all the numbers in the series together, and then dividing that by the number of numbers in the series.

Here's an example of how one might calculate the mean in R:

```{r}
(1 + 2 + 3 + 4) / 4
```

Fortunately, there is an easier way to do this.  In R, you can make use of the `mean()` function to get the same result.  In the code below, The `c()` function collects a series of values into a vector.

```{r}
mean(c(1, 2, 3, 4))
```

We can ask R to check that both approaches return the same value by using the `==` operator, which means 'is equal to'.  If both approaches return the same value, then R will print a result `TRUE`.

```{r}
(1 + 2 + 3 + 4) / 4 == mean(c(1, 2, 3, 4))
```

### Median

The median is the 'mid-point' in a series of values.  